---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-app
  annotations:
    backstage.io/kubernetes-id: pitower
    backstage.io/kubernetes-label-selector: app.kubernetes.io/name=backstage
    github.com/project-slug: cloudsnacks/example-app
    # github.com/owner: "backstage"
    # github.com/repo: "backstage"
    # github.com/workflow-file: ".github/workflows/echo.yaml"
    # github.com/workflow-name: "Echo"
    # github.com/workflow-trigger: "push"
    # github.com/workflow-type: "GitHub Actions"
    # github.com/workflow-path: ".github/workflows/echo.yaml"
    # github.com/workflow-url: ""
  links:
    - url: https://google.com
      title: Google
      icon: google
spec:
  type: service
  owner: user:guest
  lifecycle: experimental
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-open-api
spec:
  type: openapi
  lifecycle: experimental
  owner: admin
  system: examples
  definition: |
    openapi: 3.0.0
    info:
      title: Example API
      version: 1.0.0
    paths:
      /example:
        get:
          summary: Example endpoint
          responses:
            '200':
              description: A successful response
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      example:
                        type: string
---